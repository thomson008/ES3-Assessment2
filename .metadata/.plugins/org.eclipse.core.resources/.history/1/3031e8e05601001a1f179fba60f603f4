/*
 * interrupt_handler.c
 *
 *  Created on: 31 Oct 2019
 *      Author: s1758499
 */
#include "xil_types.h"

u16 interruptCounter = 0;
extern int interruptServiced;
extern int state_1;
extern int state_2;

extern u16 colour_0;
extern u16 colour_1;
extern u16 colour_2;

extern u16 colour_6;
extern u16 colour_7;
extern u16 colour_8;

int tr1_done = 0;
int tr2_done = 1;

void decodeColours()
{
	switch (state_1)
	{
		case 0:
			colour_0 = 0xF00;
			colour_1 = 0xFFF;
			colour_2 = 0xFFF;
			break;
		case 1:
			colour_0 = 0xF00;
			colour_1 = 0xFF0;
			colour_2 = 0xFFF;
			break;
		case 2:
			colour_0 = 0xFFF;
			colour_1 = 0xFFF;
			colour_2 = 0x0F0;
			break;
		case 3:
			colour_0 = 0xFFF;
			colour_1 = 0xFF0;
			colour_2 = 0xFFF;
	}

	switch (state_2)
	{
		case 0:
			colour_6 = 0xF00;
			colour_7 = 0xFFF;
			colour_8 = 0xFFF;
			break;
		case 1:
			colour_6 = 0xF00;
			colour_7 = 0xFF0;
			colour_8 = 0xFFF;
			break;
		case 2:
			colour_6 = 0xFFF;
			colour_7 = 0xFFF;
			colour_8 = 0x0F0;
			break;
		case 3:
			colour_6 = 0xFFF;
			colour_7 = 0xFF0;
			colour_8 = 0xFFF;
	}

}

void hwTimerISR(void *CallbackRef)
{
	interruptServiced = FALSE;

	interruptCounter++;

	if (interruptCounter == 500)
	{
		if (tr2_done)
		{
			state_1 = (state_1 + 1) % 4;
			tr1_done = state_1 == 0 ? 1 : 0;
			tr2_done = !tr1_done;
		}

		if (tr1_done)
		{
			state_2 = (state_2 + 1) % 4;
			tr2_done = state_2 == 0 ? 1 : 0;
			tr1_done = !tr2_done;
		}

		interruptCounter = 0;
		decodeColours();
	}

	interruptServiced = TRUE;
}



